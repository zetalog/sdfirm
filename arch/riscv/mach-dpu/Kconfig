#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

if ARCH_DPU

menu "Smart Core DPU board options"

choice
	prompt "IMC CPU type"
	default DPU_CV32E

config DPU_CV32E
	bool "RI5CY"
	select CPU_CV32E

config DPU_CV64A
	bool "Ariane"
	select CPU_CV64A

endchoice

config DPU_BOOT
	bool

config DPU_LOAD_ZSBL
	bool

config DPU_LOAD_FSBL
	bool
	select DPU_DDR

choice
	prompt "Program type"

config DPU_BOOT_ROM
	bool "0-stage boot ROM bootloader (ZSBL)"
	select DPU_BOOT
	select DPU_LOAD_ZSBL
	select XIP
	select LOAD_DATA
	select SYS_ENTR_M
	select SYS_EXIT_M
	select SYS_EXIT_U
	select DPU_TCSR
	select DPU_SPI_FLASH
	select DPU_SSI_FLASH

config DPU_BOOT_RAM
	bool "0-stage boot RAM bootloader (ZSBL)"
	select ARCH_HAS_BOOT_LOAD
	select DPU_BOOT
	select DPU_LOAD_ZSBL
	select XIP
	select BFM
	select SYS_ENTR_M
	select SYS_EXIT_M
	select SYS_EXIT_U
	select DPU_TCSR
	select DPU_SPI_FLASH
	select DPU_SSI_FLASH

config DPU_BOOT_SPI_FLASH
	bool "0-stage/1-stage SPINOR bootloader (ZSBL/FSBL)"
	select ARCH_HAS_BOOT_LOAD
	select DPU_BOOT
	select DPU_LOAD_ZSBL
	select DPU_LOAD_FSBL
	select XIP
	select LOAD_DATA
	select SYS_ENTR_M
	select SYS_EXIT_M
	select SYS_EXIT_U
	select DPU_TCSR
	select DPU_DDR
	select DPU_SPI_FLASH
	select DPU_SSI_FLASH

config DPU_BOOT_SSI_FLASH
	bool "1-stage SPI flash bootloader (FSBL)"
	select ARCH_HAS_BOOT_LOAD
	select DPU_BOOT
	select DPU_LOAD_FSBL
	select XIP
	select LOAD_DATA
	select SYS_ENTR_M
	select SYS_EXIT_M
	select SYS_EXIT_U
	select DPU_TCSR
	select DPU_DDR
	select DPU_SPI_FLASH
	select DPU_SSI_FLASH

endchoice

menu "Bootloader options"


config DPU_LOAD
	bool "Enable bootloader"
	depends DPU_LOAD_ZSBL || DPU_LOAD_FSBL

if DPU_LOAD

choice
	prompt "Load image residency"

config DPU_LOAD_SPI_FLASH
	bool "SPI flash"
	depends DPU_SPI_FLASH

config DPU_LOAD_SSI_FLASH
	bool "SSI flash"
	depends DPU_SSI_FLASH && EXPERIMENTAL

endchoice

config DPU_BOOT_ADDR
	hex "Bootloader jump address"
	range 0x00000000 0x01E00000 if DPU_LOAD_SPI_FLASH
	range 0x08000000 0x08080000 if DPU_LOAD_SSI_FLASH
	default 0x00000000 if DPU_LOAD_SPI_FLASH
	default 0x08080000 if DPU_LOAD_SSI_FLASH

endif

config DPU_BOOT_PE
	bool "DPU process elements (PE)"

config DPU_BOOT_APC
	bool "RISCV CPU clusters (APC)"

endmenu

menu "Simulation options"

if SIMULATION

config DPU_SIM_CLK
	bool "Allow disabling clock framework"
	help
	  On simulation environments, CLK can be opt-off if no need to
	  configure any clocks (forced in test benches).

endif

endmenu

menuconfig DPU_TCSR
	bool "Top control and status registers (TCSR) support"
	select STRING_STRTOULL if COMMAND

if DPU_TCSR

config DPU_TCSR_ADDR_TRANS
	bool "Enable address translation support"

config DPU_TCSR_LOW_POWER
	bool "Enable bus low power support"

config DPU_TCSR_SIM_FINISH
	bool "Enable simulation finish support"
	depends SIMULATION
	help
	  In simulation environment, enabling this allows to shutdown
	  VCS simulation.

endif

menuconfig DPU_PLL
	bool "DPU PLL and clock/reset support"
	select DW_PLL5GHZ_TSMC12FFC if !DPU_PLL_BYPASS_PLL
	select MATH_DIV32

if DPU_PLL

config DPU_PLL_ARST
	bool "Enable DPU PLL cluster reset (ARST) support"

config DPU_PLL_FREQPLAN_PE
	bool "Enable 7-gear PE frequency plan support"
	help
	  Frequency plan is only prepared for DDR 7-gear. Enable this
	  option to enable PE frequency plan support to match DDR gears.
	  If unsure, say 'N'.

config DPU_PLL_FREQPLAN_BUS
	bool "Enable 7-gear bus frequency plan support"
	help
	  Frequency plan is only prepared for DDR 7-gear. Enable this
	  option to enable bus frequency plan support to match DDR gears.
	  If unsure, say 'N'.

config DPU_PLL_BYPASS_PLL
	bool "Allow disabling PLL driver"
	depends SIMULATION
	help
	  On simulation environnments, PLL can be opt-off if no need to
	  configure any PLLs (forced in test benches). Due to enabling of
	  clock framework, some APIs that obtain clock frequencies can
	  still work in this configuration.

endif

menuconfig DPU_TMR
	bool "DPU RISC-V timer support"
	select DPU_TMR_FIRQ if RISCV_VIRQ

if DPU_TMR

config DPU_TMR_FIRQ
	bool "Enable extended fast interrupt support"
	depends RISCV_VIRQ
	select RI5CY_FIRQ

config DPU_TMR_CMP_CONST
	bool "Enable constant compare counter support"
	depends SIMULATION
	help
	  Can fixup a shortened timeout value to make RTL simulation
	  faster.

config DPU_TMR_CMP_CONST_TOUT
	hex "Constant compare counter value"
	depends DPU_TMR_CMP_CONST
	range 0x1000 0x10000
	default 0x4000
	help
	  Use the fixed value to be added to the CNT, and set to the
	  CMP register.

endif

menuconfig DPU_PLIC
	bool "DPU RISC-V PLIC support"
	select PLIC
	select DPU_PLIC_FIRQ if RISCV_VIRQ

if DPU_PLIC

config DPU_PLIC_FIRQ
	bool "Enable extended fast interrupt support"
	depends RISCV_VIRQ
	select RI5CY_FIRQ

endif

menuconfig DPU_UART
	bool "DPU UART controller support"
	select DW_UART

if DPU_UART

config DPU_UART_VIP
	bool "Enable DPU UART simulation model support"
	depends SIMULATION
	default y
	help
	  When this is selected, the UART baudrate generator frequency will
	  be APB_CLK/16, making things happening quicker when an UART slave
	  VIP is connected. In case your are using a UART master DPI VIP,
	  selecting this is safe as the VIP cares no about the baudrate.
	  If unsure, say 'Y'.

endif

menuconfig DPU_SPI_FLASH
	bool "DPU SPI flash support"
	select MATH_DIV32
	help
	  The DPU SoC contains a random accessible SPI controller that is
	  able to convert generic SPI NOR flashes into random accessible
	  ROM.

if DPU_SPI_FLASH

choice
	prompt "Divider length"
	default DPU_FLASH_DIVIDER_16

config DPU_FLASH_DIVIDER_8
	bool "8-bit"

config DPU_FLASH_DIVIDER_16
	bool "16-bit"

config DPU_FLASH_DIVIDER_24
	bool "24-bit"

config DPU_FLASH_DIVIDER_32
	bool "32-bit"

endchoice

choice
	prompt "SPI select length"
	default DPU_FLASH_SS_8

config DPU_FLASH_SS_8
	bool "8-bit"

config DPU_FLASH_SS_16
	bool "16-bit"

config DPU_FLASH_SS_24
	bool "24-bit"

config DPU_FLASH_SS_32
	bool "32-bit"

endchoice

endif

menuconfig DPU_SSI_FLASH
	bool "DPU SSI flash support"
	depends SPI_MASTER
	select DW_SSI
	select ARCH_HAS_SSI_FIFO
	select ARCH_HAS_SSI_XFER_32
	select ARCH_HAS_SSI_FRF
	select ARCH_HAS_SSI_SPI
	select ARCH_HAS_SSI_SPI_1WIRE
	help
	  The DPU SoC also contains a DW_SSI controller that can be used
	  to interface with the external SPI flashes. However, the
	  controller doesn't support random accessibility.

if DPU_SSI_FLASH

endif

menuconfig DPU_DDR
	bool "DPU DDR controller/phy support"
	select DW_UMCTL2
	select MATH_DIV32

if DPU_DDR

config DPU_DDR_SPD_BUS_NUM
	int "I2C Bus (Master) Number for DDR SPDs"
	default 0
	depends I2C && I2C_MASTER

config DPU_DDR_SPD_COUNT
	int "Count of DDR SPDs (DIMMs)"
	default 2
	range 1 8
	depends I2C && I2C_MASTER

endif

config DPU_PCI_SUBSYS
	bool "DPU PCIe subsystem support"
	select DW_PCIE

endmenu

endif
